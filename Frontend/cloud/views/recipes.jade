extends ./base

block content
    .jumbotron
      h2= "Barback is the best way to discover new cocktails (and remember old ones.)"
      p
        em barback (n) â€” a bartender's assistant; 
        they they are there to simplify a bartender's job; bussing tables and dishwashing are common duties. In some establishments, barbacks may also be responsible for the safety of the bartender.
      p.
        For connoisseurs and novices alike, filled to the brim with modern and classic cocktails.
      p.
        Happy bartending!

      p
        form(class="form-inline", method="post", target="popupwindow", onsubmit="window.open('https://tinyletter.com/Barback', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true", action="https://tinyletter.com/Barback")
          .input-group
            input(type="text", name="email", class="form-control input-lg", id="tlemail", placeholder="Email")
            .input-group-btn
              input(type="submit", class="btn btn-primary btn-lg", value="Email me about updates")
      p
        a(class="btn btn-primary btn-lg", href="https://itunes.apple.com/us/app/barback-classic-modern-cocktails/id829469529?mt=8") Check out our iPhone app

    .row
      h4.col-xs-12.col-md-4= "Sort by:"
        a(id="name", href="#") Name
        a(id="abv", href="#") ABV
        a(id="complexity", href="#") Complexity
      .col-xs-12.col-md-6
        h4.pull-left= "Search for:"
        .form-inline
          input(id="search_filter", name="search", type="text", class="form-control", placeholder="Search for...")
    hr
    - function slugify(text) { return text.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w\-]+/g, ''); }
    .row
      .recipes
        each recipe in message.recipes
          .recipe.text-center.col-xs-12.col-sm-6.col-md-4.col-lg-3.col-xl-2(data-abv="#{message.abv[recipe.attributes.name]}", data-name="#{recipe.attributes.name}", data-ingredients="#{message.bases[recipe.attributes.name]}")
            a(href="/recipe/" + recipe.id)
              .recipe-container
                .row
                  span(class="ingredient pull-right")= recipe.attributes.name
                div(id="#{slugify(recipe.attributes.name)}")
                script.
                  drawRecipe("#{recipe.attributes.glassware}", !{JSON.stringify(message.visualData[recipe.attributes.name])}, "#{slugify(recipe.attributes.name)}")

block script
  script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.1.1/isotope.pkgd.min.js")
  script.
    var container = $('.recipes');
    container.isotope({
      itemSelector: '.recipe',
      layoutMode: 'masonry',
      getSortData: {
        abv: '[data-abv] parseInt',
        name: '[data-name]',
        complexity: function (element) {
          return $(element).attr("data-ingredients").split(",").length;
        }
      },
      sortAscending: {
        abv: false,
        name: true
      }
    });
    $("h4 a").click(function(event) {
      event.preventDefault();
      var container = $('.recipes');
      var sortBy = $(this).attr("id");
      container.isotope({ sortBy: sortBy });
    });
    $("#search_filter").on("keypress paste focus textInput input", function() {
      value = $(this).val();
      var container = $('.recipes');
      container.isotope({ filter: function() {
        var name = $(this).attr("data-name");
        var ingredients = $(this).attr("data-ingredients");
        return name.toUpperCase().indexOf(value.toUpperCase()) > -1 || ingredients.toUpperCase().indexOf(value.toUpperCase()) > -1 ;
      }});
    });

